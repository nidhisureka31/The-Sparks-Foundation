<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0605.1023                               -->
<workbook source-build='2021.2.0 (20212.21.0605.1023)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (owid-covid-data)' inline='true' name='federated.006dym30yrdcej1dzy1ga0vr1t70' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-covid-data' name='excel-direct.1jpqy6q1pc0ybu190jwra1hgaj1l'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/nidhi/Downloads/owid-covid-data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1jpqy6q1pc0ybu190jwra1hgaj1l' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:BH10001:no:A1:BH10001:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' date-parse-format='yyyy-MM-dd' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='integer' name='total_deaths' ordinal='7' />
            <column datatype='integer' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='integer' name='icu_patients' ordinal='17' />
            <column datatype='real' name='icu_patients_per_million' ordinal='18' />
            <column datatype='integer' name='hosp_patients' ordinal='19' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='real' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='real' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='integer' name='new_tests' ordinal='25' />
            <column datatype='integer' name='total_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='integer' name='total_vaccinations' ordinal='34' />
            <column datatype='integer' name='people_vaccinated' ordinal='35' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='integer' name='new_vaccinations' ordinal='37' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='38' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='42' />
            <column datatype='real' name='stringency_index' ordinal='43' />
            <column datatype='integer' name='population' ordinal='44' />
            <column datatype='real' name='population_density' ordinal='45' />
            <column datatype='real' name='median_age' ordinal='46' />
            <column datatype='real' name='aged_65_older' ordinal='47' />
            <column datatype='real' name='aged_70_older' ordinal='48' />
            <column datatype='real' name='gdp_per_capita' ordinal='49' />
            <column datatype='real' name='extreme_poverty' ordinal='50' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
            <column datatype='real' name='diabetes_prevalence' ordinal='52' />
            <column datatype='real' name='female_smokers' ordinal='53' />
            <column datatype='real' name='male_smokers' ordinal='54' />
            <column datatype='real' name='handwashing_facilities' ordinal='55' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
            <column datatype='real' name='life_expectancy' ordinal='57' />
            <column datatype='real' name='human_development_index' ordinal='58' />
            <column datatype='real' name='excess_mortality' ordinal='59' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1jpqy6q1pc0ybu190jwra1hgaj1l' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:BH10001:no:A1:BH10001:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' date-parse-format='yyyy-MM-dd' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='integer' name='total_deaths' ordinal='7' />
            <column datatype='integer' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='integer' name='icu_patients' ordinal='17' />
            <column datatype='real' name='icu_patients_per_million' ordinal='18' />
            <column datatype='integer' name='hosp_patients' ordinal='19' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='real' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='real' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='integer' name='new_tests' ordinal='25' />
            <column datatype='integer' name='total_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='positive_rate' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='integer' name='total_vaccinations' ordinal='34' />
            <column datatype='integer' name='people_vaccinated' ordinal='35' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='integer' name='new_vaccinations' ordinal='37' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='38' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='42' />
            <column datatype='real' name='stringency_index' ordinal='43' />
            <column datatype='integer' name='population' ordinal='44' />
            <column datatype='real' name='population_density' ordinal='45' />
            <column datatype='real' name='median_age' ordinal='46' />
            <column datatype='real' name='aged_65_older' ordinal='47' />
            <column datatype='real' name='aged_70_older' ordinal='48' />
            <column datatype='real' name='gdp_per_capita' ordinal='49' />
            <column datatype='real' name='extreme_poverty' ordinal='50' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
            <column datatype='real' name='diabetes_prevalence' ordinal='52' />
            <column datatype='real' name='female_smokers' ordinal='53' />
            <column datatype='real' name='male_smokers' ordinal='54' />
            <column datatype='real' name='handwashing_facilities' ordinal='55' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
            <column datatype='real' name='life_expectancy' ordinal='57' />
            <column datatype='real' name='human_development_index' ordinal='58' />
            <column datatype='real' name='excess_mortality' ordinal='59' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BH10001:no:A1:BH10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>56</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>excess_mortality</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([total_cases]))'>
          <table-calc ordering-type='Columns' />
        </calculation>
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_1261007956614455297]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Excess Mortality' datatype='real' name='[excess_mortality]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='integer' name='[hosp_patients]' role='measure' type='quantitative' />
      <column caption='Hosp Patients Per Million' datatype='real' name='[hosp_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='integer' name='[icu_patients]' role='measure' type='quantitative' />
      <column caption='Icu Patients Per Million' datatype='real' name='[icu_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
      <column caption='New Tests Per Thousand' datatype='real' name='[new_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed' datatype='integer' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Vaccinations' datatype='integer' name='[new_vaccinations]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed' datatype='integer' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='integer' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='integer' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='integer' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions' datatype='real' name='[weekly_hosp_admissions]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='real' name='[weekly_hosp_admissions_per_million]' role='measure' type='quantitative' />
      <column caption='Weekly Icu Admissions' datatype='string' name='[weekly_icu_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions Per Million' datatype='string' name='[weekly_icu_admissions_per_million]' role='dimension' type='nominal' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[aged_65_older]' derivation='Sum' name='[sum:aged_65_older:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cardiovasc_death_rate]' derivation='Sum' name='[sum:cardiovasc_death_rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[diabetes_prevalence]' derivation='Sum' name='[sum:diabetes_prevalence:qk]' pivot='key' type='quantitative' />
      <column-instance column='[extreme_poverty]' derivation='Sum' name='[sum:extreme_poverty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[female_smokers]' derivation='Sum' name='[sum:female_smokers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospital_beds_per_thousand]' derivation='Sum' name='[sum:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[life_expectancy]' derivation='Sum' name='[sum:life_expectancy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[male_smokers]' derivation='Sum' name='[sum:male_smokers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_per_million]' derivation='Sum' name='[sum:new_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_tests]' derivation='Sum' name='[sum:new_tests:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[positive_rate]' derivation='Sum' name='[sum:positive_rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[sum:total_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths_per_million]' derivation='Sum' name='[sum:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[weekly_hosp_admissions]' derivation='Sum' name='[sum:weekly_hosp_admissions:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:hospital_beds_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:cardiovasc_death_rate:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:positive_rate:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:life_expectancy:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:new_tests:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:female_smokers:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:diabetes_prevalence:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:male_smokers:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:total_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:aged_65_older:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:new_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:weekly_hosp_admissions:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:extreme_poverty:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_C6AA74FD5EA1435FB5969E4C2E83C6F2'>
            <properties context=''>
              <relation connection='excel-direct.1jpqy6q1pc0ybu190jwra1hgaj1l' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:BH10001:no:A1:BH10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' date-parse-format='yyyy-MM-dd' name='date' ordinal='3' />
                  <column datatype='integer' name='total_cases' ordinal='4' />
                  <column datatype='integer' name='new_cases' ordinal='5' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='6' />
                  <column datatype='integer' name='total_deaths' ordinal='7' />
                  <column datatype='integer' name='new_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
                  <column datatype='real' name='total_cases_per_million' ordinal='10' />
                  <column datatype='real' name='new_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='13' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
                  <column datatype='real' name='reproduction_rate' ordinal='16' />
                  <column datatype='integer' name='icu_patients' ordinal='17' />
                  <column datatype='real' name='icu_patients_per_million' ordinal='18' />
                  <column datatype='integer' name='hosp_patients' ordinal='19' />
                  <column datatype='real' name='hosp_patients_per_million' ordinal='20' />
                  <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
                  <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
                  <column datatype='real' name='weekly_hosp_admissions' ordinal='23' />
                  <column datatype='real' name='weekly_hosp_admissions_per_million' ordinal='24' />
                  <column datatype='integer' name='new_tests' ordinal='25' />
                  <column datatype='integer' name='total_tests' ordinal='26' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
                  <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
                  <column datatype='integer' name='new_tests_smoothed' ordinal='29' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
                  <column datatype='real' name='positive_rate' ordinal='31' />
                  <column datatype='real' name='tests_per_case' ordinal='32' />
                  <column datatype='string' name='tests_units' ordinal='33' />
                  <column datatype='integer' name='total_vaccinations' ordinal='34' />
                  <column datatype='integer' name='people_vaccinated' ordinal='35' />
                  <column datatype='integer' name='people_fully_vaccinated' ordinal='36' />
                  <column datatype='integer' name='new_vaccinations' ordinal='37' />
                  <column datatype='integer' name='new_vaccinations_smoothed' ordinal='38' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='39' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='40' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='41' />
                  <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='42' />
                  <column datatype='real' name='stringency_index' ordinal='43' />
                  <column datatype='integer' name='population' ordinal='44' />
                  <column datatype='real' name='population_density' ordinal='45' />
                  <column datatype='real' name='median_age' ordinal='46' />
                  <column datatype='real' name='aged_65_older' ordinal='47' />
                  <column datatype='real' name='aged_70_older' ordinal='48' />
                  <column datatype='real' name='gdp_per_capita' ordinal='49' />
                  <column datatype='real' name='extreme_poverty' ordinal='50' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='51' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='52' />
                  <column datatype='real' name='female_smokers' ordinal='53' />
                  <column datatype='real' name='male_smokers' ordinal='54' />
                  <column datatype='real' name='handwashing_facilities' ordinal='55' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='56' />
                  <column datatype='real' name='life_expectancy' ordinal='57' />
                  <column datatype='real' name='human_development_index' ordinal='58' />
                  <column datatype='real' name='excess_mortality' ordinal='59' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Cases over Different Aspects'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.006dym30yrdcej1dzy1ga0vr1t70' />
          </datasources>
          <datasource-dependencies datasource='federated.006dym30yrdcej1dzy1ga0vr1t70'>
            <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
            <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
            <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
            <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[tests_units]' derivation='None' name='[none:tests_units:nk]' pivot='key' type='nominal' />
            <column-instance column='[cardiovasc_death_rate]' derivation='Sum' name='[sum:cardiovasc_death_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diabetes_prevalence]' derivation='Sum' name='[sum:diabetes_prevalence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[extreme_poverty]' derivation='Sum' name='[sum:extreme_poverty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[female_smokers]' derivation='Sum' name='[sum:female_smokers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[male_smokers]' derivation='Sum' name='[sum:male_smokers:qk]' pivot='key' type='quantitative' />
            <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:diabetes_prevalence:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:extreme_poverty:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:female_smokers:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:male_smokers:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:diabetes_prevalence:qk]&quot;</bucket>
              <bucket>&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:extreme_poverty:qk]&quot;</bucket>
              <bucket>&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:female_smokers:qk]&quot;</bucket>
              <bucket>&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:male_smokers:qk]&quot;</bucket>
              <bucket>&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:cardiovasc_death_rate:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:tests_units:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:tests_units:nk]' />
              <groupfilter function='member' level='[none:tests_units:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:extreme_poverty:qk]' included-values='non-null' />
          <slices>
            <column>[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:tests_units:nk]</column>
            <column>[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:extreme_poverty:qk]</column>
            <column>[federated.006dym30yrdcej1dzy1ga0vr1t70].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.006dym30yrdcej1dzy1ga0vr1t70].[Multiple Values]</rows>
        <cols>([federated.006dym30yrdcej1dzy1ga0vr1t70].[none:continent:nk] / [federated.006dym30yrdcej1dzy1ga0vr1t70].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{6215E5D0-68BE-4806-8E0B-897589BC8249}' />
    </worksheet>
    <worksheet name='Covid Forecast'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.006dym30yrdcej1dzy1ga0vr1t70' />
          </datasources>
          <datasource-dependencies datasource='federated.006dym30yrdcej1dzy1ga0vr1t70'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:total_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:total_cases:qk]</rows>
        <cols>[federated.006dym30yrdcej1dzy1ga0vr1t70].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{91355561-84FD-46ED-986C-42CDF9E7C10F}' />
    </worksheet>
    <worksheet name='Effect of New Cases over Reproduction'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.006dym30yrdcej1dzy1ga0vr1t70' />
          </datasources>
          <datasource-dependencies datasource='federated.006dym30yrdcej1dzy1ga0vr1t70'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[reproduction_rate]' derivation='Sum' name='[sum:reproduction_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:continent:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:continent:nk]' />
              <groupfilter function='member' level='[none:continent:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:reproduction_rate:qk]' included-values='non-null' />
          <slices>
            <column>[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:reproduction_rate:qk]</column>
            <column>[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:continent:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:new_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:continent:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:reproduction_rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:continent:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:new_cases:qk] + [federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:reproduction_rate:qk])</rows>
        <cols>[federated.006dym30yrdcej1dzy1ga0vr1t70].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{8E3F8BED-CA4A-4478-8674-CD0B8758CA13}' />
    </worksheet>
    <worksheet name='Test Summary over Test Units'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.006dym30yrdcej1dzy1ga0vr1t70' />
          </datasources>
          <datasource-dependencies datasource='federated.006dym30yrdcej1dzy1ga0vr1t70'>
            <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
            <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
            <column caption='New Tests' datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
            <column-instance column='[tests_units]' derivation='None' name='[none:tests_units:nk]' pivot='key' type='nominal' />
            <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
            <column-instance column='[aged_65_older]' derivation='Sum' name='[sum:aged_65_older:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_age]' derivation='Sum' name='[sum:median_age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_tests]' derivation='Sum' name='[sum:new_tests:qk]' pivot='key' type='quantitative' />
            <column-instance column='[positive_rate]' derivation='Sum' name='[sum:positive_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tests_per_case]' derivation='Sum' name='[sum:tests_per_case:qk]' pivot='key' type='quantitative' />
            <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
            <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:tests_units:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:tests_units:nk]' />
              <groupfilter function='member' level='[none:tests_units:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:tests_units:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:new_tests:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:positive_rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:median_age:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:tests_per_case:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:aged_65_older:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:tests_units:nk]</rows>
        <cols>([federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:new_tests:qk] + ([federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:positive_rate:qk] + ([federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:tests_per_case:qk] + ([federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:median_age:qk] + [federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:aged_65_older:qk]))))</cols>
      </table>
      <simple-id uuid='{33287A03-4BAF-43DF-B29D-D0A92D7DC75A}' />
    </worksheet>
    <worksheet name='Timeline Analysis of Covid-19'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_0' value='#f5ead7e6' />
            <format attr='border-color' id='annotation_0' value='#b6992d' />
            <format attr='border-style' id='annotation_0' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontname='Tableau Semibold' fontsize='14'>Nidhi Sureka</run>
              <run>Æ&#10;</run>
              <run bold='true' fontname='Tableau Semibold' fontsize='14'>Task #8 Timeline Analysis of Covid-19</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.315004'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.296482'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.706991'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.648241'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{13FBC6CA-14DE-4FB5-8903-8E56682F54CF}' />
    </worksheet>
    <worksheet name='Total Cases and Deaths Per Million over Population'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.006dym30yrdcej1dzy1ga0vr1t70' />
          </datasources>
          <datasource-dependencies datasource='federated.006dym30yrdcej1dzy1ga0vr1t70'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases_per_million]' derivation='Sum' name='[sum:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths_per_million]' derivation='Sum' name='[sum:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
            <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:total_cases_per_million:qk]&quot;' user:op='manual' />
          </filter>
          <filter class='categorical' column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:continent:nk]'>
            <groupfilter from='&quot;Africa&quot;' function='range' level='[none:continent:nk]' to='&quot;South America&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:continent:nk]</column>
            <column>[federated.006dym30yrdcej1dzy1ga0vr1t70].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:total_deaths_per_million:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:total_cases_per_million:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:total_deaths_per_million:qk] + ([federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:total_cases_per_million:qk] + [federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:population:qk]))</rows>
        <cols>([federated.006dym30yrdcej1dzy1ga0vr1t70].[none:continent:nk] / [federated.006dym30yrdcej1dzy1ga0vr1t70].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{7C270B2D-90B3-4064-9C3A-7C40276045F4}' />
    </worksheet>
    <worksheet name='Total Cases over Location'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.006dym30yrdcej1dzy1ga0vr1t70' />
          </datasources>
          <datasource-dependencies datasource='federated.006dym30yrdcej1dzy1ga0vr1t70'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:total_cases:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:total_cases:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:total_cases:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:total_cases:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:location:nk]</rows>
        <cols>[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:total_cases:qk]</cols>
      </table>
      <simple-id uuid='{C1043C1B-8B64-466D-997C-0242081549E4}' />
    </worksheet>
    <worksheet name='Vaccinations over Location'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.006dym30yrdcej1dzy1ga0vr1t70' />
          </datasources>
          <datasource-dependencies datasource='federated.006dym30yrdcej1dzy1ga0vr1t70'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column caption='New Vaccinations' datatype='integer' name='[new_vaccinations]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
            <column-instance column='[new_vaccinations]' derivation='Sum' name='[sum:new_vaccinations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[people_fully_vaccinated_per_hundred]' derivation='Sum' name='[sum:people_fully_vaccinated_per_hundred:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:new_vaccinations:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:people_fully_vaccinated_per_hundred:qk]' included-values='non-null' />
          <slices>
            <column>[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:people_fully_vaccinated_per_hundred:qk]</column>
            <column>[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:new_vaccinations:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:people_fully_vaccinated_per_hundred:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e9d2e3</color>
                <color>#e2b5d7</color>
                <color>#db99cb</color>
                <color>#d47fbf</color>
                <color>#cd66b3</color>
                <color>#c64fa8</color>
                <color>#bf399d</color>
                <color>#b82492</color>
                <color>#b11188</color>
                <color>#aa007f</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:new_vaccinations:qk]' />
              <color column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:people_fully_vaccinated_per_hundred:qk]' />
              <text column='[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C2B41D1B-DBF0-413F-85DE-6A4A4852CA36}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Semibold'>Timeline Analysis of Covid-19</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-description'>
          <format attr='background-color' id='story-description_6' value='#f6eee3f7' />
          <format attr='border-color' id='story-description_6' value='#b6992d' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='width' value='180' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='5083' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='5913' />
            <zone h='82780' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='16390'>
              <flipboard active-id='9' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Timeline Analysis of Covid-19' captured-sheet='Timeline Analysis of Covid-19' id='1' />
                  <story-point caption='Total Cases over Location' captured-sheet='Total Cases over Location' id='4' />
                  <story-point caption='Total Cases and Deaths Per Million over Population' captured-sheet='Total Cases and Deaths Per Million over Population' id='2' />
                  <story-point caption='Cases over Different Aspects' captured-sheet='Cases over Different Aspects' id='5' />
                  <story-point caption='Effect on Reproduction' captured-sheet='Effect of New Cases over Reproduction' id='6' />
                  <story-point caption='Test Summary' captured-sheet='Test Summary over Test Units' id='7' />
                  <story-point caption='Vaccinations over Location' captured-sheet='Vaccinations over Location' id='8' />
                  <story-point caption='Covid Forecast' captured-sheet='Covid Forecast' id='9' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='30394' hidden='true' id='6' story-point-id='1' type-v2='text' w='54626' x='22539' y='32054'>
          <formatted-text>
            <run fontname='Tableau Semibold' fontsize='18'>Nidhi Sureka</run>
            <run>Æ&#10;</run>
            <run fontname='Tableau Semibold' fontsize='18'>Task#8 Timeline Analysis of Covid-19</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{FB2BD3A8-5E3B-4CFF-9C5E-81C366505F02}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Total Cases and Deaths Per Million over Population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:continent:nk]' type='filter' />
            <card pane-specification-id='4' param='[federated.006dym30yrdcej1dzy1ga0vr1t70].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9298F893-D89F-4698-A43F-CA9C9D85408A}' />
    </window>
    <window class='worksheet' name='Vaccinations over Location'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:people_fully_vaccinated_per_hundred:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:people_fully_vaccinated_per_hundred:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:date:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F5698A4C-C9FA-4F8B-BC60-60BD3D99B52C}' />
    </window>
    <window class='worksheet' name='Test Summary over Test Units'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{22B8B398-9603-4D5B-AC4C-4D9DB6FB51B2}' />
    </window>
    <window class='worksheet' name='Cases over Different Aspects'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.006dym30yrdcej1dzy1ga0vr1t70].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.006dym30yrdcej1dzy1ga0vr1t70].[:Measure Names]</field>
            <field>[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5AD4099E-CE06-4DC8-B6EB-3D9CAB4C770E}' />
    </window>
    <window class='worksheet' name='Effect of New Cases over Reproduction'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:continent:nk]</field>
            <field>[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:date:nk]</field>
            <field>[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CCC4DC63-8CAA-4413-B6AA-1D7CE052200E}' />
    </window>
    <window class='worksheet' name='Covid Forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.006dym30yrdcej1dzy1ga0vr1t70].[sum:total_cases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.006dym30yrdcej1dzy1ga0vr1t70].[tmn:date:ok]</field>
            <field>[federated.006dym30yrdcej1dzy1ga0vr1t70].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2D7FE4AA-347C-4104-87B6-355B9545BDF7}' />
    </window>
    <window class='worksheet' name='Total Cases over Location'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BA06776A-17A8-4759-B181-A5ECA8D35BEE}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{FE381DA6-6B72-463C-B907-1DD715E8DF68}' />
    </window>
    <window class='worksheet' name='Timeline Analysis of Covid-19'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.006dym30yrdcej1dzy1ga0vr1t70].[none:continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D3AF342-E487-49FD-B88A-D367FD26B361}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cases over Different Aspects' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Covid Forecast' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Effect of New Cases over Reproduction' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29d3hcx3nv/9nesei9sQBgAdjAXkFREkl1WXJ3XGJbTHxdZCdybOfeRNc3
      jm5ccm3Zyc+WLdtxka0oKo5FkRIbCBBEIQmiECB6WWCxBYvF9l5+f4CESJEUSYAkCOB8nocP
      yT1nZt49O98z887MOyOKx+NxBATmKeKZNkBAYCYRBCAwrxEEIDCvEQQgMK+5TAA//8H/Zt++
      fe/+eeZ/g8fEvn37MHmmVsB/vfBdvv38bwF47u+/TG3r4JSNfemFH7Bv3z46jK6bTvvb57/N
      d1/4rxu+v/adV3nuJ/9x0+UAVL35B3Zu28zff//nl33eVHuUv/vbp/nil79K1enzN5yfx9TJ
      vn3P8N6f4Lvf3Mdv99dccb9zzMzPn/8er75TO/lZ2+kqnvnql/mbv/uftPWN3NT3mctcJoBd
      Dz3JU099msFzZ9j95Kd56hNPgjKRp556ikTl9At77COfoTg/dWqJoz5efe0QORkJHK06OX1j
      rkPxig08tmfHlNL+6dX/5Bs/+A/+6W8+N/lZ1+nDfOVb/8L6igf4+Icfg0johvNTJmbz1FOf
      4EZ+Ao/pPB//9F9xrOYkRosdAL99kKe//m227nmcDSXpfOXpZ/BFhME/eI8AFpYsp7x8NQox
      LClbTfnK5RBx8vS+bxKUTrzNP/jRv+DB3fewa89j/PP/+Ud2bNnIRz7/dcJxMHY387EnHmL9
      hs38w/d/Tuw9hf3wn/6ODqOb9pr97H7kwzz1qQ+zYeNmXtpfDcArv/x/7NiyiXv3PkJ1U/dl
      aQ3nGhDnr+RDeys4cWLifgJmtq3dzjNf/zIbN6znme/8GwAv//z7VGzbzIZNW3ju3393WT6N
      h1/hic/9LXFgtOcUe578PD6XlS985qOsW7uWBx75AN0WL00n3uJnL/03xCN8/389zcb166jY
      tZtD9W2TeQVdozzzhc+wbv06PvKpv6Lf7OCF736T461D/P0XPsq3vvduC/D6K//Jk5/9Ek88
      dD+btuxg+8aVhH3jfOsrT7F+3Tqe/MRn6Rq28c7LP+Urz/4IgLNHX+XTX/02EecQ+775z0iB
      kZ5mPvaBh9iwaQvv1Hdc8YMqk/J55dVXqShfMvmZpb8XVe5yHt29kw/95RcpkJo4fV5oBWAK
      PkBu8Rpee/NtStPiZC6v4PCR/TjaahkLws+e/x4PP/UPnKg8iLH+dU51jV4zH7kmie/88Bf8
      09c+RcOZsziHW/nFn87w2oEj/OjvP88Pf/yzy+6vqqpi06ZNFK/ehO1cLWZv5MIVCX/xxW+w
      /6V/p66hAYAN9zzM8z/5d/7vP36VP//mpcu6Dqt37IWhRs4bXVQePcr9Dz7ISGcTXbYY3/vh
      j/nh9/+ZNK3s3QQ+C68dbuIb3/6/vPDTn1C6IGvy0p/+8CKh1DJqTtby6MYCfvSz3/DU159j
      6/IcfvSbN3nu609N3msyW1i4YOFl3+nAK79hXFlI1claPrGrlH/9yS/ZUrGT1vpaQnE4efIk
      9+y857I0L/z4B5Q/8BlO1lSzc80iAMzDA5w5c4Y+wwhSpQaVXHJZmuyiZcRGWvjH577Pvz3/
      I0yuCG7XzXcj5yI3LYCklFQUMhlqtZKMjAxkSg2KC897xGTiz7//GV96+hmkyXlE/O5r5qNO
      SCItSYdaowZgdMSE12nhW898led/+yaZ6UmX3B2juvoENQdf4a+/8k1CUR8n6louXJORn5+N
      5kI+EOMX//od/vDGAboNI0giESKX5CSSaXn8oQr2H3iHY5W1PLj3Xhat2cFnP1DBS7/6KU/t
      +xIDZvu7CTQ5PPcPX+LYm6+w73Ofo6a5Z/LSiGmE1WvXIpdKWb92LaYR0zW/b1ZmBv0DA5d9
      ZjSNsGLNWpQyKevXrcVkMqHJKKYszceZzmFO1rezc8f6y9KMmM1s2b4diViMTDYh1Jb647zw
      wgscqTlz1bLlCZn88le/YEFGIqk5hWhlItIz0q9p63xCeiszW1JSwoi4kI88spNxi5H0ZD3X
      rhKXk7OoGIUozr0PP0FhegIDprHJa67hNtrtGn7wL19DApw69t+cqD7Bk1s+dGVGcS9nmgw8
      /dxf4TOdv6IbBvDw4x/gw5/9GskLyinJ1NJ77hRifQ6f/6sv8vuf/YDufiPJF+4N2YfosAT5
      +Kc+S+HBV2g738GT901UyrLSFfz01ZcpyVBw4I+vULai4prf7/EPfZh9X/8+2YkyshLlhCWJ
      rCwr43u/f4UVBXqOvf4ypWWrARE7d1bw+i+fJ563hjy9nID/3XwK8vJ47Y+/Q3TferoGTGRt
      hfuf+BT3P/EpYMIB7hkwMmIdJxTt58zZVlavLqWu4RTLylbSWvsOoZQVrFqUcoO/zNzmKi2A
      mNLV5WjkFy6J5awuX4kUSMvKoyAnA4CFxctITtBcuH81cjH89d/+IzlqPy/+4kXqmrtQqRSX
      pSletpIEjRxNQjLLiie6AwnJGSwuyEGVUsgPvvMN6g//mV//5iV8YdGkRX39wzz6wQ+yvryc
      8vJyPvTBDxILuoldYptYrmF16RIQ6fjKVz/NGy+/REidyqYL1zNyCsjLSgNAn1vKygI9ux94
      AICk5BT62xt58cUXySrbyYM7VpOUlsXighwkaj0xp5Ffv/gio5FEPvfxxyftuufxT/LEjmX8
      x69/hW7BOp7+3IcBWLyklASN/LKnWly+ix9+5xnqj+3n9y+/AVIZmx/4CH+xdy2/+/WvkGQu
      4+tf+CQAO3btxul08uRjD134CTSUr1wGwF9/7VvIPEO8cbCSJStWk5GccFk5hq4WXnjhBUzu
      OGMDrbzwqz8SQYTTauCXL76IwS3nJ//vO8hECACiebcWKDDOv//817x1qIZf//GPpKpvaSMo
      MMuYhxNhImSqBL7//PNC5ReYhy2AgMAlzMMWQEDgXQQBCMxrBAEIzGsmvUC73f5+9029AOlE
      EZFI5Dp33l2oVCr8fv/1b7yLEJ71zSO0AALzGkEAAvOamxZAIBC4HXbMGqKRIFabnYDXzbhr
      ikESAncNkmefffZZgP7eLs61nUeTkEjQ6yIUE2E4fw57BPRKKSPmUbQ6LWaTGb1ef8MFiMUT
      GovFJlbl9Pd04nJ7Uag0jFpMSJVqwj43drcPrUqByWRGo9XitNvwR+KoFHIioQAW2zhquYRI
      XEI4FEAUj2Edc6BVyfF6fYQiMeSyWzexJZPJJvvSNsMARqeLWCRGT2cbKo2Ojs4uUtMz8LnG
      EcmUiGNhTNYxzH3d2COQkqAjFglhstjQarV4XeOMu/1oNapbZuN7ufRZxyJBhnrPc95gJyU5
      EfuoBaVGi8dpx+OPMNDZhjcmIlGnxdDfi8PlQixVEI9FiYTDxGNRxh3jRCJRHG4vCrGIcYed
      SCSK0+NDpZBiHDGh0mgJhwJ4XC7iIhnxcAikMsQ3sdTi0mc92NeLNjGZwf4+tBolpgv1zu91
      4fQEkRJldNxNOBRAJhbhcDmIxMTEwn5G7S7kkjinzzSiT07B5/EgJord6UWjkGJ3OAmEokiJ
      YB61o9Np33WCM7Pz8AbC6KQhhjxionYjGq2exNwsIj4PkaCHPoMZxTTXkMTEUhYUFBCLhIjF
      YvR09yAXR8jIKcQw0E9aVjaDBiNe5xiFi4snHophmJysVIwWG9G4GFEsRCQSJjstgRGLlWGT
      kzWrSqZn2A0gEolJSc8iOyuTgN+LIuJmXKzDMWyAWIy8/HxEPi+JuRNLpgcGDeTmZDEwNELA
      60SrUhFJS761KxCvgViqID8ni7BThsMyjC4tC8OgAb/XSX7hYrQJiWRlZwKgUilxePzI5DKs
      lhEIR1CrJEQ06YwO96PSaHD6XIhSMxke6EetVhHVKolHw/T0DhDxjrNgSSkjxiHEYhGFCxZM
      2e6crGRGzOMgEhGNRC/Uu2EIR8jPz8FgMJCfn4/FYkYccBNQpeIaNZOapMczOohIVUZaejo6
      tYqhsVHGxkJkJCoxW7yMhxWo4mOMhwPokzOIcZ0ukFQC4VAU44iZjIxsxPHwlL/YRSKhicpr
      GR5GlZSKXCYhL78Qo2GQcDiAccSMTC6jsHABhkHDJSnjIFEgjrgRyzQEvG4sY27kUsjMykYq
      vp3ujISc/HxSky9v+eLxGOaRYRBJEYkm3gySC8/svWi0GqRiCTMx7R6Lhhk2jiCVySkoLMRg
      GEQiglBkwk6lRsfCglyMw0ZisRg+rxcQoVKp0Gp1F1oWCSq1Eq1Wi1gixjRiJDk9A4lYRGJK
      OlqVAoVUDBIJ03lHSlVJBMd6kWtTL6t3F5/vxb8nEKHRaBBLxJitNrIz0giHo8RjMS5d4HDx
      XxqNBolYTGZOHj67EVcg9u5SCLvdjt/vR6VS4bDbECs06NRyTOZR0pITsLsD6LUTa+6VyhuP
      j3zv0Fw0HMRksZGZlYHVMkpSchLRkJ9ARERKkg6T0URyRiY+5xhSZQIJWhWRUIDRcTeZGWn4
      PS5k6gREkQDmUTtZmemEI6BU3Nr36qVDc+GAD5PVhkqjQ6dRoVQqJ5/VmNWMVJ2AViHBMuYk
      KyMFk3mU7KxMYpEQ5tFxsjIzCAYDiACZUnnbRh6uGAaNhvFHRKjkEswmIwnJGYR8TuJSJYla
      JSbrGNmZGQR8HmzjbrKzM3HabcREMhI0SkQyJZHQhM8nAcRKJeELPqBcKsZic5CUOLEaValU
      4jAbCGsySdPJr7Dt/XjvMKjL6USr1xMN+ibrXSwSxBeGBKWUcU8QvU6NdOKBEgkFiEWCBEJR
      1Do9Qc84EqUOqSiOKB7B6Q2TnqQlEBNDNIwoHsHuCpCVkXq5AG4Hwtj0nWOmn7Xdbic5Ofn6
      N74HYR5AYE4wlco/00wKwDU+Sn//AA6X97YW2NvVQX9fDw5PAJ/PR8htpa1nmBFDPyPWsetn
      AAScFsa8777lBrvO4fDf+FtvZOTmAsKdFhO9BgN9g0M3lY6wE4PJeeXnES8jFiexSBB/cHa1
      jLcbp8XKjQy0X/wNfT7ftMqb7DiP2l0sWjQRZG0yGnB4guiUEiJxMWnJegZNduRyGaKID6kq
      gYLcbII+D+ZRG2K5mrysG4sxlSs15OXn0d/Xj0QmRRZyEBOlYrEaySrQ0dneRlQsQ6OUEAhG
      UavkRKJRVNoUrMYekGnI1MQx+v3oSwqRiiKIlHocVhM+UYRQTERmsoa2IScqaZwUrQJvKIJS
      rcU9NkZCSjJDBgNypQbryCBJ6dlkpb//Vi3hYISsvDyMPb1YjIYL+ekZMxuQSOSkJWkZdgTI
      TNTiC4URiaXI4iHi8SBxZRpDBhPhiI8EtRK3P4xGCYZhN8nKDEbDKny9Q8QRk6RR4haLEUXi
      LF5QMI2fdfYSDgaRASHvOL1GO2KRCK1CRDgmJjUthTGbDbFEhnF4CIVKi8/jwD4aJRKLo9Ak
      YjMNgFjJsrJlSK5TFlzSAsRjsQlvORpg3OnHH/CTnp5BLBzAYrISl0iRSMSkp6fjc7qJAOPj
      dhCJ8N+kCuOxCLELRev1erKystAnp5KZpsPjCSIXS4hK5BSXFOPzepFIZIhEMZJS0klM0KLV
      acnMzkEqBofVjD8cxel2k5aRQTwawuMJkJaRjUYpx+X2IJVIEceDKLQpZGVkkJqeTmqynvT0
      VNw3NJkVpbutBak64d38RKBPTiErRUsgImJhcQnhcIjCwkKIhYmJJOTnZk+OiMQBbyBM4YJC
      0lOTSc/IQikTQyyIUptKmk5BICIhJy8fhVSIV/S73GTkFyKXQjgmorCwAI/jQn0LhklPTyMl
      acIBj8ShsLAQv9eFPjmVVL3uqrHgV2NyIkwqjjM0bCIukUM0hEKlRS4VEwxHyS4sJOxxolBp
      iEcnJjqS9AmI4jECwTDahAQ8HjdRvxcUGqSXeBbvnQjzOMexO93k5ucjEU2MHkhkSmQSUKl0
      SMRR4mIZiXodKqUSjUqBxxdAl5CIQi5DqVCgTUjGZjKi0ycSisbIzc5ELZMSjkYJBiMkJagY
      MI6SmpJERkoSbp8frT4FcdSHOxBGp5ThDUQIBXwoVFp0WvUVD+bSyRkQkZlfQDzgJjklBa/P
      jzYhAYvRgFSTTFqiFqlcSaJOxZBhiMTkNJRSGLW7SdAnE/Y7CMfF5GenMzRsRK5NJuAeRaHR
      I5VrEIVcBMUK0hK1k6NENzPSdq1nPVu4/FnHsFhH0SSl4raaUOkSSdKpMJqtaHU6Qhfqm1ou
      wReOoVIq0KoVjJisZObmIROLUSgVyG9wtG1ujgKFfTjDMvRq2fXvvQY3MjLhdDpvalb8djPT
      o0BTZSZHgeZmUKxMjX7qdf+GuZsqv8DUEIZBBeY1k12g29UEzdZ+qVQqnXVdCeFZ3zzCrhDT
      IBwOc/LkSVzCPpuzFqELNA18Pp9Q+Wc5QgswTWw220ybIDANBAEIzGuELpDAvOa2CmC2jUYI
      zD9uqwCE3pXA3Y7QBRKY18zNpRACc59ogMoDfyJ7w2NkY6OmuYuikqUszMtkuK+DLoMZrT4F
      aXAc6+g4q3bsITNBQXvTKYxmCyVrKjhfd0hoAQRmKRIlG1YV4QnGqK6tR6MQEwhOHD3r9riI
      RSJ4vB7MNg+77ttG48mJM5NNY2Pct2cvHefqcfpcggAEZj9KhYb1W3Zg6J84fHzUOsaGLdvw
      uR1s3byGhobTaJMmjseKx0XEIwFESHn8g5+8vfMA0WgUieRG4nIEBG6OaNDN8cpKvCRx344V
      1NScIn/RUrrazrJl3Uoa27rJyl2EIuZi0OJm85qFVJ4xsGpRCi0d/WzetpXmulpBAALzG6EL
      JDBv+eEfjwkCEJifvF7ZzG/fahAEIHAriWM2mwHwOkZpaDw3uS3huNXI+d6JrS47WhsZGXVM
      pupub2LIbCfgHqOyspLeIctEbrEwDXX1BCMxYmE/tRf+DRD0OqhtaCR6oYC+vn4gTmtjA6OO
      a2/tE45E+c6vDtLWZ+Kpx7cIAhC4dRj7u6lvbgViVNc1Ulqy4IIA4tScOkvQeI5zzScYl+Vx
      tq4aAJ+phaFgMi1nTtDc2Mb6HRUsyps4WL3myDGWlC7j7bcPcezYcVavXknswn6mR6pOsHpZ
      LkeP1zHQfoaDJ8/SW1uFLG8ZddXHr2qfzenhC9/9T5YtyOJ//uUeUvQaQQACt46cBcWk6tWA
      i6EuI0feep1BexAIolZqKCpMZySop7+pGn9soupJtemYO+pxB0UsLMqnvvIYR6vqAMjKSefM
      mSY8IR/WISM11ZW0dPQAoJPBkSMnSMtModcaZEGmnqTcLJqqjxATK66wrbV3hK/866t8+cM7
      eLxiJQB6rUqYCRa4dfR2tnK28SzpmQvIKUggHo0ScRrp9iXh94xxsNZK6ZJi/Ml63E4X3e2t
      aORxlPpkvC4Hbq8PsQjiYgmt51rJy0hnyDrOwoJiIolDhGIipBIxrefaCATCqBP0jJmNSICW
      5mY0UjHJ+gSc79nd8PXjLRysbef5rz1Jil4z+XmCRikMgwrcXkYMg6TlFSC7yl5fhsFB8guu
      tgNeHMPgEPkF+VdciXhGsQQ15KRcuZfTewlHonzvd0cQieBvP74LmfTyunh+wCwIQGDuEY+D
      xe7i2V8cYO+mZTy6veyq9xlHHVPvAvV3nyUQyyQ/TUy30UZGRiZjI4PIVGoCoTgry5ZO+QsI
      CEyHP1W18H9+9Tb/8Q+foHRh1jXvS9Aopy6ABUVFdHe66R8aRqPWMe6YGNaKRsJI5NqJc6re
      c1KHgMCdwOHxs++xzSzJT3vf7VaUMun0neCUBC2ixBzMgz1oVDoWFy/ibFMLYrGYeDwudIEE
      7jgnmvv58d88MblV5PsxRQFE6e00EgOScosYNw+xqGQJUa+Dru4eSpYum1q2AgLTpGd4lNz0
      RFSKG9sbU3CCBeYUP/rPKjaXFbJu6ZUjSFdDmAgTmDNEYzGauoyUl+TdcBpBAAJzhoZ2A+uW
      5SO+iVO6BQEIzBkO1HbwwKabG34XBCAwJ/D6Q9icXgqzbu6kSkEAAnOCo2e6uae86KbTCQIQ
      mBMcOt3NfesEAQjMQ0w2FxqlHL1WddNpBQEIzHoO1neyZ+OSKaUVBCAwq4nH49S2GdhcOrWD
      xQUBCMxq2votLMlPu2Kt/40iCEBgVnOwvos9G0umnF4QgMCsJRSO0mscY2lB+pTzEAQgMGs5
      eW6QzWWFiEQ3vvThvQgCEJi1vHOqm/unMPZ/KdMOiVxakkVPZzPuoBJZzCuERArcEcbdfsKR
      GBnJ2mnlM+2QSJ9jFLEmBXnYSzwmhETOVdqbTjPk9HPP2lJOnm7BYnfxoccfBmDgfCOVpw1s
      L0mmxR2ndFExiwuz6GtrpGvEjkKtB7cZpJCSu44VSzLpaW/GaB1DopBhMtoJR6J86CMfQAoc
      P3wQkVzPqpVFNDa1MWp3s3lVCT2GYWISHTu3ruXw6W52rl4w7RPmpx0SOeZwEQ4GGLE6KMxJ
      F0Ii5ygr1m7EXVeDSp9GqlaG1alEKpUSD3sxjMdYkJmIJCWdlOAoHq8bqTSPYdsYD+3dy9tH
      DyMRgdftozBFj1QqZUnZKkzv7Ccvq4Bh4zj6yBgjXikL9SEGBwfJzs4lLE+hKD+DmERDbn4u
      za0tpC1agFQq5USrgef27b6hsMf3Y9ohkWk5RShlkJsbIOx3CyGRcxz3+BiLVm5icPQA41YL
      LpeNYCjA+ZZmCkqK2LxlMYcPH8OSkUKiUs6I3UE8Ap6QmPvvr+BE43kSRAW0NdezcstuUrQK
      0jOyOF1TQ5bSi8UeIy07n9VFabQ0nyYu1nJ/xUYsFjMPPvI4B98+Qn96CpnJOtQ3GPb4fggh
      kQI3xJn6atz+KMvKVjHY3UZG4RJGh/tYs3YdImB8bJwEnYKG082sWruetpazrF27hqbTpyle
      uZaI20p7r5k1S7NoHw6iiY1htDopLF5OcGwIXeZCgqMD6AqWowyN0zPioDg7iYbmNuSaREoX
      ZdFyvpc16zbwu4ONlJdkU16SM+3vJQhAYFYRjcX48o/28+OvPHRTkV/XQhgGFZhV/PRPp0jS
      qW9J5QdBAAKzCG8gRNuAlQc3Fd+yPIUukMCs4bt/OMGOVYVsWJp7y/IUWgCBWcHxpgFUCtkt
      rfwgCEBgFjDq8PL6iQ4+/1D5Lc9bEIDAXU0sHueHr9bzPx5bh1J+689zEQQgcFfzenUHZQvT
      KcpNuS35CwIQuGvpM41zumuED+1YftvKEAQwz4lFghw6VgnAQHc7x44ewTzuA8Ay1Muhw4fx
      BGM0nTrJ4aPVhCfHDOMcPXyEaNDN0SNHaO+ZOALV5xilsrKS1948yLhlmMrKYwyM2CZSRINU
      HTtGz+AIAMePHCUMnDx2mMqTpy6zKxSO8m9vnObpJzbcsjH/qyEIYJ7j9/mRXehbZ+YtZN2q
      Is63nwegpaObeys2UXvyJEvK1pAudTDimjimtKOxjhGrn1M1pyiv2MVQdxsA6sQ0Kiq2o5GJ
      aGluZe36DXS2tALQcLIKiUJJYlIilsEOzvWMECFK6/lz5Oddvpvzr95u5sGNRWQkTW+58/UQ
      BDDP0SQkIpNMvGFNA53UNA9TsWVitEUiESGSKonHg7ScPkE4qYQCvQTCbt6qrMc61EnWogWc
      On4Mk801mWfP2ZMsXLkZXaKehrp6NIk6AOwOFytWr+HE8WO88ee3CHus9A5Y2PeFpxlurGf8
      wsrmsz1mHJ4AO1cV3vbvL3n22WefvV2Zx+NxxGJBY3czY5YhGk6fJRST0d/dhlqlQiqX0tzS
      RUaimqamZpat3siZulqUChlxvxNTWMcju3eikClYXJjNiNlC3oJFDHefJyW3gAGDmRVLFuIY
      teANhFBq9fR1d7BxVSknGs6SmpHFY489hlKhoGRRNlXVJ/EgpbR4IV5fkB++doq/+8hmFLLb
      P4kqzAQLXEHE7yIs06GSXtn3drtd6HQJV0137Wtx3G73NdNN3hWP8y8v17J33SJWLsqYiuk3
      zZQFcDEkMi9DzrDZhjcYRhEPXRYSKQhA4EaJRGO8UtWBLxDms3tX3rFypx0SqU1MIcHlRCxX
      EXLZhJBIgSlx3jDG74+28f996f5phzneDNOeWhsd7iMoTaA4P5XuzqAQEikwJUzjPj67ZyV5
      6fo7Wu4UPdSLIZEuRKoEQu4xBo1m0lIShJBIgSlxvMXA/eWFd7zcKbYAEhaVvLsdXWpK6uS/
      E1PvjPMiMHfoNztIS9SgUcrveNnCGKXAjPPOmQF2r10wI2ULAhCYUYKhCAMWJ0tyb+5sr1uF
      IACBGeVEu5Ety3Ontb/ndBAEIDCjVLUOUbHixg+2vtUIAhCYMQatLlISVGhVd975vYggAIEZ
      4/DZAe5bXTijNggCEJgRguEofWYnS/Jmxvm9iCAAgRmhrmOETUtzZsz5vYggAIEZoercMDvK
      bu0WJ1NBEIDAHWfI5iZRq0Q3g87vRQQBCNxxjjYZ2LUy//o33gEEAQjcUUKRKL1mJ0tn2Pm9
      iCAAgTtKQ6eZDSWZM+78XkQQgMAdparNyPblM+/8XmTap0Sm60IM2d1IJApEQbdwSqTANTGO
      eUhQy9GpZ975vci0QyJN425WlZZyrm1iXxghJFLgWhxtNrCjNOeOhjxej2mHRCYqpdhcXqLR
      OGqVTgiJnAEGu9vpGjCxpWInapkY40A3HT1DbNq2mdM1NegzC1i5bDEAbWcb8MRVlC1Ip775
      PLmFxRQVZhMNuqmsrqOwZAWL8jI4ffwIxZt3kSADQ28HfQYjxWXrMfeexeUXsWnrRhqqjpOc
      u5jlxYXXtTEcidJncfOJnUvvmv4/3IKQyNT8YgLjVkqWLhVCImeI3v4Rdu1YS1V1HQApmXkU
      pUs58KcD5JZXMDLUDUBovJ+mXhtJScmcbWlm5dr19Ha2AHCyppZNFffS09GC2zJI57keXBde
      1Ok5hWxYU0pbexvnWtpJz8nHeKqGrDXbMQ103ZCNf6zuYmle0l1V+eEGWoC33tSs0+sAABJs
      SURBVDpAxDdOTJPBY3t3Xfj08pDI3IKJaB5laoYQEjkDFORnUHu6lWgkDIDdNMBwOInHH19L
      5fHjDJkm9uYMuW0k5i9hqPksuvx0mhvqkGoSAQgjQikVgVjEK2/8GVk4SG/vALmlhYwO99Da
      b2fPvdsRb99I96l3ON0fYvtaGe+3bWc8HqdlYIxDTQa8gTC719wdY/+Xcl0BDPW0Ik8tJOwY
      vhP2CEwBqVSC3+1h/ZYKqqpq8LmsKLVJjLtzEMsklJWtorXhBLkrNqBqfwe/WkOBSo7HKUIh
      U1BdVcX65SUcePsQWVn57N51L0NNZ1Auzqa6qha3Yxh1QhoGk5mR7nYc7hC7H95M1dsHSc7I
      usKecCTGyQ4T1W1GirKT+Mv7lpGsVc7Ak7k+190Yq+fcaXrHQmTodaxaVXZTmQsbY91Z4hE/
      7rCMBNWV7zWX202CTnfVdBO7tl15LRb04EONVnFjPWWPP8zR1mGa+kfZUJTB9tIcVJccatF8
      uhZHSMaOzWuBKPXV1bjcDorW30+u2s/JpiG2b14FsTAnqqrQpOayNFvNkdM9LF60mJJFecSj
      Id6pPMnuXRV4xq009xjZsm41AMN9XXQPDFG2biupOjlHDx/lnl3bqT52bV/lut/sQGUdKXol
      dQ11N/QQBGYOkVR11coPXLPyA1et/ABihfa6ld8bCNPYO8pvKzv48f4WMvQq/v6D69i9puCy
      yg9uxuwi8hUuzo8GAQkbtlUgkajITlFTU9dMwDnRVbOer0W/ZCsWYz8dTW1EpHJycydamoDP
      D/KJE+IjyCHqmyyhtaubDWuX09rcMrl7dV/d+/sq1xXAnh0bONfUSsX9D1/vVoF5SM15Ez9/
      p431RRl844k1bCjJRHJVx0CHPiFMV28/wfDEFuuxwDhhuZ6xrlO0DY5yrqUZXxjSlmxgrO0E
      g0Yrpffs4eEd6zh8+G0AVDo9CulEtU1MSrysBL1CSv2Z8+jUTO5e3TdkR6u5tq9y3d2h39j/
      NhGfg36jlbWrV9zUwxF2h577vHl6gH17SlmYob/uCM+o2YhbkszqLDEtg17GRwZYuX4Dyek5
      rFtdikKmwGnuQ56cyZjZTEZOAbKwm6bWdpLSsunr6kCvllF3qpFgWETQbaXl3HnUukTaW8+j
      lEMoGkOfmsujD+1BIVOwcccajh+qRJeaSX5O5hU2XdcH+PMrv51wgn0+Hnpw9009HMEHmNv0
      mp0cPzfCX957c7P+rgs+x9Xkcid8lUu5bgqZTE5/ZzOu0N01fisw87x5epCH1hXedLqEa1T+
      i9euxXR8lWtx3VTDYx6KFy9m3GqYUgECc5Mek5NEtZx0vWqmTZkW79sF8rocRCUKQi4rY34J
      JQtvbhWf0AWau/zozRY+vr2I1ITZLYD3bQFeefm/UKhVpGblU3nkwJ2ySeAup9vkIFmnnPWV
      H64zE7xjUym/+NnPUUgiFJVuvVM2CdzlHGgc4uPbi2bajFuCcEaYwE3R1G+j3+rm8Q0zs5vz
      reZ9W4CjB//EqDMAQFreYu7ZXH5HjBK4O4nGYrzTPMxXHry5JTF3M+/rA9yz51GWLcwhHA4T
      icauflM8xmBfL75AGIfNQldXF75A+HbYKjDD1HdbWb0w9Y4cX3qnuO4waE1jOyVLijANdF/1
      em9HO0nZ+XR2tDM65qKoaDGd59tuuaECM0skGqOm08KOpVeu/pzNXNcH6O3txWsfwSNJZvOa
      5VdcHzMNMGB2IpErkYa9iGUy4jItSxcXEI1G77oACIGpUdtlJRiJUbHsyuUEs5n39QEsIwZe
      evllHnv4IU6dOHlVAXh8QdRKBb5gGCkgkcrxBnxCSOQtwOcYpaGpjR6Dic998qMQ8lJ58hTu
      YIyKdaW8WVnLRz/wKABuyyBVTV1kZOSSpZdgsPvYVL4KgJrjh/B4Q6zbvoPaY5WoEtO4Z9uG
      y/J/ZNcm2rsHkKr1JMkjWMfGyF1cTlFBGpFojIZeG1/auxypdG79nu8rgGgkwoKCAkKhMB//
      6Eevek/BopKrfi4wfdSJaVRs20DwaMPEB3INmckabAN2dMnp5Ge/ezhh/blO9u6+n0NHDrN2
      1b0MWGomrzmcTsTxGL1N1eSv242pvfKK/NNzClHIJNS0DrB11zY4XUUgGAKgrttK+cI05HOs
      8sN1fIDs/IXo5XE6O9upPd18p2wSuISGqmrWbp2Yg4nH45SUlaOOBPC/5z6lWEQgEkd0RYc2
      AlI15csXMu6O4Pd4EV0ynnEx/9HBTmrajezdtY2G6kOIUxZTVpwz8fbvGWVLydwMdb3+WiCz
      jdWrVjE82H8n7BF4D8m5C0lRSag5cgCLzcbx41Xoc/PxWYawWW2campn//79bN68idrKwyxe
      soLezlZsVhtNdcdp7h0jNy2J1kE3W+99kJi5kfTsQo6/vR9P+N387R4PagI0t3cTDsWwDHYx
      MuqgttvK2kVpyKRzc1n7+zrBTc3NFC/Io62rn+UrVqKW39wuKsJE2OwmHI3xk7fb+eLuZcgk
      c1MA71ujG6oP0XR2op855g2zZ8fGO2KUwMwTj8d5qaaPsrzkOVv54ToCUCdn84mPfexO2SJw
      FxGNxek2OdlSnD7TptxWhLVAAlflVK8NTzDMzmVza+Lrvczdtk1gysTjcep7RtlUNLff/iAI
      QOAqtBudLMrQoZxDa36uhSAAgcuIAyc6rWxdMjfH/d+LIACByxiwuklPUKJTymbalDuCIACB
      y6jqsLJ96fx4+4MgAIFLMDn8yGUSUrSKmTbljiEIQGCSqg4rO5bM/ZGfSxEEIADAuDdEIBwl
      O0k906bcUQQBCABwosvKtpL59faHW3BGmNduodtoIyMjk7GRQeGUyFmINxjB6gry0CrtTJty
      x5m2APqHhtGodYw7HIBwSuRs5GT3KOsXJBGN3j2nN94ppi2AlAQtosQczIM9aIRTImcdwUiU
      fpuPXcszEc/D+O1bshjONDSINjWTqNeBxe4kN78QjVIuLIabBZzssaGQiikvTJ5pU2YEYTXo
      PCYai/PLqj4+s20B0jm85v/9mJ/fWgCAlmEHy3L087bygyCAeUs8Hqdx0MHawqSZNmVGEQQw
      T+k0u1mQqplT2xxOBUEA85AxT5A3m80sz0mYaVNmHEEA85Aui4f8FBVJavlMmzLjCAKYZ1hc
      AfpHvTy5Nhf5HN3r52aY9kSYwOwhHI3x9jkrj67Kwj10jsNtNkqLF1OyKI8xs4FzHf2g0JCd
      IMVoHSM1dzGlRQW0NNZhsY5StGo7A601OAMSHnxoN1IREAvx4q9+x2c/+ylef/mPZC9ewYby
      MiI+B1X1TfjCcdYU59I1YMTm8rNyURZGm5NVazeRqJn5Fkh4BcwjjnWMUl6YiF4tw2LxolaA
      WDbxDkzJzKd8RTFOt4ei5avITdfjDwQBGDHb2LnrPpobD+HzayjPFXN2yAPAqdoaUrIyIDCG
      K6BELJ3IT6pOpGLrerxuJ9mFRZQVplJYXEbj6Uai4RCR2N2xREYQwDyhd9RLMBJjefaE47tg
      VTl779lJX8fEnq8OYy9HzvTx8P0VNDVU4xWnsK6sGIAdWzfT0NCASpvHqhXZnO0ykZaggKif
      850D9J0/R78tzic/9QR2yyAA8YiXV147wKOPPgJAQ/sQa5fkkpSew65d2zlbV3MVK+88kmef
      ffbZ25V5PB5HLBY0NtN4gxHeaR/lkZWZk5NeNpOBM2ebKShaTu2JKlRqJUG/F7s7SNg/jtvl
      Ii6Oc7KuBZ1KzKjdy7ZtmzH0daJMW4A+OES/W8nuXVvJyMwgN1XHiZP1JKbl0N3UgCZBg9nh
      Z9RmpzAnDZFYRXJyIlqliIYzLZRv3o7qLhiCFZZCzHHi8TivN5lYX5hEbtLsP9b0ViO8nuc4
      Z4ecpOsUQuW/BoIA5jA2T4huq5fNC+fnSs8bQRDAHCUSi3O4Y5Tdy9IRi+ffOv8b5ZbMA/R0
      NuMOKpHFvEJI5F3CiV47ZTkJJKrnxwZXU2XaAvA5RhFrUpCHvcRjQkjk3YAvFMUTCLN1gZ5I
      ZP6FOd4M0xbAmMNFOBhgxOqgMCddCImcYRz+MEc6x3mwNG3Oneh4O5i2APIKFwExcnMDhP1u
      urp7KFm67BaYJjAVTvaNE4zG5sXOzrcCYR5gDtE07GLcH2b7omQkguN7QwijQHOELqsXsztI
      xeJk3GNmmtu7J6/ZzUM0Xfi/Z9yKOxidvNbd3oRpzEU44KG25gQOb3DymslsBmDMPERlZSWW
      MTcA8ViYhto6vMEIdssQja0dAHS2NjJktt/273orEQQwBzCM++m0ermvJBWRSEREJEUy2kGv
      Y8IBrmlsJTEwSItxnNbaw3SPThyAPd53Brskk7rqI3j9Qco3bKTq6NsA+Jw2/ny0GoC2871U
      VFSQkaIDoPrYMZavXo0oFmHcEyI5aKDuvAFd1mKaGk7MwBOYOoIAZjkWd5AzQy52L0md7Pao
      pdDYP0aqcuL/Mb+TU51WMvQaVq1YMplWk5aDtacFy5gbdVICJw6+iSoxeyIPfSrFC3IByM9N
      59jRQ9Q1tQNgtQ5xqqaaUy0dyONBWmxS1i/Nx9BWT/aCJcwmhHiAWcy4L0xNn4O9y1IvC27p
      6+snJ1XHsMnIcCRONBwlKUGFedhMU+sZDDhJWpVBYnYhSVoFkrx8rH19SHRJeP0ezp1rJTcj
      habGRlRyLTppAIgjEUs4d66V/LyFeEIxFFIJr/3pDVaWb6b7dCWn+12sUftm7oFMAcEJnqV4
      ghHe6bRzX3EyOuXV32OjIwY0aXmoZVc6xIOGQQryC66azjA4SH7BlddigXGMDgl5mXMnllgQ
      wCwkEI5xsMPGtoVJpGiEmd7pIPgAs4xwNMbhLjsbC/RC5b8FCD7ALMLpj1A36KQsW0Nmwvw5
      xuh2IrQAswRvKMr+DhtKmZgCYW3/LUNoAS5w6uRxxuxOync+QJpGSl3VUUadAe57YDf1Rw6h
      ychn7cplQJzqo28jT8xhw5oy2pqO4wpmsWlDMSHPKEdrmllQVIJ/zIDVOsbSjfeSl6KmvekU
      RrOFkjUVDJ47gccfZes9W3jrtSMsXlFKeVnJNW3rtflpt3rZsTCJdK3Q7bmVCC3ABdZt3o5a
      EiIUiQHgDkfYvTaX/fv/TL9Hht8fAMA30sR5c4xAIEDYO4o9GMdnn9ghoaa6FpVGQSAQxGR2
      cM9999DUMBH8bRob4749e+k4V4/D6SAadDNuNhFQqpFeY3+eQCTGsZ5xbN4we5ekkKNX4LYZ
      J2deIUp9dSWVlZWMuYOcqaum/kzrZPru9iaGLXYiQQ+nGlt5d7QjPjnLe+lM7kX6+/om/u5q
      wzTmIhYJUldbiz8UZa4hCOACh958g8Xrd5Ojv7BXTRy8ngCJyXqKl5YRcNsIAxKZiuIly5C6
      HBw8UU/I7+J8Xy8ASqWCVeu3YDb0s33behoaTqNJmIjGisdFxCMBRKI4Elkqq4pzMMfT+dQT
      e7EM9l1hz5AjyOEuO0vS1WwoSEB6YZLr4sxri8kPSNiwrQI1IRB58Ya0bCgvA6Dv3GliuhyS
      tAoOH6mkKFdLdf05AEyDfVQ1tl4lPzAPtLP/4En81k56HTLO1lVRefgIK9es5tiho7fr8c8Y
      ggAAiBMTxehqPUNn2xlOtQ9TmJ1BkyXOPVt3onB2kpCSTcORA/h0xSRGjIhS0nl490PsqriX
      B+7fylv797Nx2w7OVh8jb1ERNtsogYiMLWsWcuDwScqWFHG4so7NW+4hM01JpzXG4oQIlZXH
      ySxYNGlJOBrj5ICTwfEA95ckk/UeZ/fizGtp1gU/IB7GHpSQolASizn5w2v/DUC3wYBtsIOD
      R04gV0hITF+A3zvx1s8qWERGkvbK/OIR2nutLF2QiX2kn9yFRUhUStKTdRw+fARNctod+C3u
      LMI8wF2ExR3ijNFNaaaG/ETlVe6I86MfPMfK8s2sWLkMky1E1NZF8tItJIucNJxtx+rwsHn5
      QmTiGPXdZkSISVFF8fr9ZC5aiyg4hlYh4Y13jrF3zyMcfOO3rCzfTOmyImzOMGbjAI31Z/jQ
      Rx6huqENlUpFmkZMCCnBuIQ992y/48/ldjJtAXgcYwybbXiDYRTx0GUhkYIAboxxf4Qzw26k
      YhEb8xNQyq7fME9llvf9ZnLNQ4MkZRegmGc/1y1pAUYMfXgiUkIuG2KZjJhUy7KiAqLRKKJ5
      ePDazeAORmkY9iKXitiSr0NYxn/z9LQ3Y7SOIdGmsnXtCvq72zEMm5Do0lBHnQwPDlC+92Pk
      6CQc/PPrBAJBNu+s4GhlPf8/FQQeqj2MgDwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='175' name='Test Summary over Test Units' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Timeline Analysis of Covid-19' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Cases and Deaths Per Million over Population' width='192'>
      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
      rcXJ0wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Cases over Location' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Vaccinations over Location' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
